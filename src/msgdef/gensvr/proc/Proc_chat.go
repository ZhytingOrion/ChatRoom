package proc

// Code generated by gen.
// 本文件是对应 chat 的处理器实现文件。
// 框架代码由 gen 生成，具体实现需要手工填写。
// 再次生成时会合并原有实现。

import (
	"proto/chat"

	"zeus/net/server"

	"ChatServer/room"

	"fmt"
)

// Proc_chat 是消息处理类(Processor).
// 必须实现 NewProc_chat(), OnClosed() 和 MsgProc_*() 接口。
type Proc_chat struct {
	sess server.ISession // 一般都需要包含session对象

	// 可能还应该包含用户和房间对象
	// user *User
	room *room.Room
}

func NewProc_chat(sess server.ISession) *Proc_chat {
	room.TheRoom.Add(sess)
	return &Proc_chat{
		sess: sess,
		room: room.TheRoom,
	}
}

func (p *Proc_chat) OnClosed() {
	// 会话断开时动作...
	p.room.Del(p.sess)
}

func (p *Proc_chat) MsgProc_ChatRequest(msg *chat.ChatRequest) {
	fmt.Println("Got chat request: ", msg)
	p.room.Chat(msg.Data)
}
